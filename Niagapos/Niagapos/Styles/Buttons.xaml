<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Niagapos">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!-- Color Reference for Button -->
    <SolidColorBrush x:Key="VisualDarkBackgroundBrush" Color="{StaticResource VisualDark1Color}" />
    <SolidColorBrush x:Key="VisualDarkBackgroundHoverBrush" Color="{StaticResource VisualDark6Color}" />
    <SolidColorBrush x:Key="VisualDarkForegroundBrush" Color="{StaticResource VisualLight1Color}" />
    <SolidColorBrush x:Key="VisualDarkForegroundHoverBrush" Color="{StaticResource DefaultWhite}" />
    <SolidColorBrush x:Key="VisualDarkBorderBrush" Color="{StaticResource VisualDark9Color}" />
    <SolidColorBrush x:Key="VisualDarkBorderHoverBrush" Color="{StaticResource VisualAzure1Color}" />

    <!-- Color Reference for Button -->
    <SolidColorBrush x:Key="VisualDarknessBackgroundBrush" Color="{StaticResource VisualDarkness1Color}" />
    <SolidColorBrush x:Key="VisualDarknessBackgroundHoverBrush" Color="{StaticResource VisualDarkness2Color}" />
    <SolidColorBrush x:Key="VisualDarknessForegroundBrush" Color="{StaticResource VisualLight1Color}" />
    <SolidColorBrush x:Key="VisualDarknessForegroundHoverBrush" Color="{StaticResource DefaultWhite}" />
    <SolidColorBrush x:Key="VisualDarknessBorderBrush" Color="{StaticResource VisualDarkness7Color}" />
    <SolidColorBrush x:Key="VisualDarknessBorderHoverBrush" Color="{StaticResource VisualAzure1Color}" />

    <!-- Button System Icons -->
    <Style x:Key="SystemIcon" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="5 2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Window Close Icon -->
    <Style x:Key="WindowCloseIcon" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource VisualDark10Brush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Content" Value="{StaticResource SSDTimesIcon}" />
        <Setter Property="Padding" Value="5 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       x:Name="text"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="True"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DefaultRed}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource DefaultWhite}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource VisualDark10Color}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!-- Window Control Icon -->
    <Style x:Key="DarkButtonIcon" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="Background" Value="{StaticResource VisualDarkness2Brush}" />
        <Setter Property="Foreground" Value="{StaticResource VisualDarkForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />



        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="True"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualAzure1Color}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualDarkness2Color}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!-- Darkness Button With Icon -->
    <Style x:Key="DarknessButtonIcon" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource VisualDark10Brush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="5 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       x:Name="text"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="True"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DefaultWhite}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource VisualDarkness2Color}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource VisualDark10Color}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!-- Button Load Animation -->
    <Style x:Key="LoadAnimation" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Background" Value="{StaticResource VisualDarkness2Brush}" />
        <Setter Property="Foreground" Value="{StaticResource VisualDarkForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                        <Grid>

                            <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           FontSize="{TemplateBinding FontSize}" 
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           Margin="{TemplateBinding Padding}"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                           
                                />

                            <TextBlock Style="{StaticResource SpinningText}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{StaticResource DefaultWhiteBrush}"
                                        Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}"
                                        
                                            
                                           
                            />


                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualDarkness1Color}" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="border" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualDarkness2Color}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Social Network Button -->
    <Style x:Key="SocialNetButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeBrand}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="Background" Value="{StaticResource VisualDarkness2Brush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultWhiteMilkBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="4 4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />



        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Focusable="True"
                                           Margin="{TemplateBinding Padding}"
                                           FontSize="{TemplateBinding FontSize}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           HorizontalAlignment="Left" 
                                />

                            <Border Background="{StaticResource VisualDarkness7Brush}" Grid.Column="1" x:Name="borderContent">
                                <TextBlock Text="{TemplateBinding Tag}"
                                            Grid.Column="1"
                                            FontFamily="{StaticResource Roboto}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Focusable="True"
                                            FontWeight="Bold"
                                            Margin="{TemplateBinding Padding}"
                                            FontSize="{StaticResource FontSizeSmallest}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                />
                            </Border>


                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualAzure2Color}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource VisualAzure1Color}" Duration="0:0:0.3" Storyboard.TargetName="borderContent" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualDarkness2Color}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource VisualDarkness7Color}" Duration="0:0:0.3" Storyboard.TargetName="borderContent" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!-- Developer Button -->
    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource NexusPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="4 6" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />



        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{TemplateBinding Content}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="True"
                                        x:Name="contentLeft"
                                        Margin="{TemplateBinding Padding}"
                                        FontSize="{TemplateBinding FontSize}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalAlignment="Left" 
                                />

                            <Border Background="Transparent" Grid.Column="1">
                                <TextBlock Text="{TemplateBinding Tag}"
                                            Grid.Column="1"
                                            x:Name="innerContent"
                                            FontFamily="{StaticResource Neuropol}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Focusable="True"
                                            FontWeight="Bold"
                                            Margin="{TemplateBinding Padding}"
                                            FontSize="{StaticResource FontSizeSmallest}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                />
                            </Border>

                            <TextBlock Text="{TemplateBinding Content}"
                                       Grid.Column="2"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="True"
                                       x:Name="contentRight"
                                        Margin="{TemplateBinding Padding}"
                                        FontSize="{TemplateBinding FontSize}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalAlignment="Left" 
                                />


                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource VisualAzure2Color}" Duration="0:0:0.3" Storyboard.TargetName="contentLeft" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource VisualAzure2Color}" Duration="0:0:0.3" Storyboard.TargetName="innerContent" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource VisualAzure2Color}" Duration="0:0:0.3" Storyboard.TargetName="contentRight" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DefaultWhiteMilk}" Duration="0:0:0.3" Storyboard.TargetName="contentLeft" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource DefaultWhiteMilk}" Duration="0:0:0.3" Storyboard.TargetName="innerContent" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource DefaultWhiteMilk}" Duration="0:0:0.3" Storyboard.TargetName="contentRight" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>



    <!-- System menu icon -->
    <Style TargetType="{x:Type Button}" x:Key="SystemMenuIcon" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Margin" Value="6" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowSystemLogo" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5 2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="NavigationButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PurpleNexusBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource Neuropol}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <Viewbox>
                                <TextBlock x:Name="text"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Text="{TemplateBinding Content}"
                                           Focusable="False"
                                           
                                />
                            </Viewbox>
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource MediumOceanBlue}" Duration="0:0:0.5" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="WindowSystemIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5 2" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}">

                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                 />
                            </Viewbox>
                        </Grid>

                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="WindowControl" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource DarkPurpleNexusBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock 
                                   Text="{TemplateBinding Content}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Focusable="False"
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   Margin="{TemplateBinding Padding}" 
                        
                                 />
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DarkPurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="WindowCloseControl" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource DarkPurpleNexusBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock 
                                   Text="{TemplateBinding Content}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Focusable="False"
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   Margin="{TemplateBinding Padding}" 
                        
                                 />
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Brave}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DarkPurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PurpleNexusBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource Neuropol}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>

                            <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           FontSize="{TemplateBinding FontSize}" 
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           Margin="{TemplateBinding Padding}" 
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                          
                                 />


                            <TextBlock Style="{StaticResource SpinningText}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           FontSize="20"
                                           Foreground="{StaticResource MilkBrush}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}" 
                                          
                                 />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DarkPurpleNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PurpleNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CustomizeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource Neuropol}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>

                            <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           FontSize="{TemplateBinding FontSize}" 
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           Margin="{TemplateBinding Padding}" 
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                          
                                 />


                            <TextBlock Style="{StaticResource SpinningText}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           FontSize="20"
                                           Foreground="{StaticResource MilkBrush}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}" 
                                          
                                 />

                        </Grid>
                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ButtonIcons" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PurpleNexusBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock 
                                   Text="{TemplateBinding Content}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Focusable="False"
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   Margin="{TemplateBinding Padding}" 
                        
                                 />
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DeepPurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PurpleNexus}" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ButtonBarRight" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource DustBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontFamily" Value="{StaticResource Expressway}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="{StaticResource EnableNexusBrush}"
                            BorderThickness="5 0 0 0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    x:Name="text"
                                    FontSize="{TemplateBinding FontSize}" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="5 0 8 0">

                                <TextBlock.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </TextBlock.LayoutTransform>

                            </TextBlock>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource MediumOceanBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    <ColorAnimation To="{StaticResource MediumOceanBlue}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource EnableNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    <ColorAnimation To="{StaticResource Dust}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ButtonBarLeft" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource DustBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontFamily" Value="{StaticResource Expressway}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="{StaticResource EnableNexusBrush}"
                            BorderThickness="0 0 5 0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    x:Name="text"
                                    FontSize="{TemplateBinding FontSize}" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="10 0 5 0">

                                <TextBlock.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </TextBlock.LayoutTransform>

                            </TextBlock>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource MediumOceanBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    <ColorAnimation To="{StaticResource MediumOceanBlue}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource EnableNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    <ColorAnimation To="{StaticResource Dust}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Button with grow icon effect -->
    <Style x:Key="ButtonGrowIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="30" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">


                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <Grid>
                            <Viewbox>
                                <TextBlock 
                                   Text="{TemplateBinding Content}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Focusable="False"
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   Margin="{TemplateBinding Padding}" 
                        
                                 />
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.8" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.8" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DustBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BaseButtonII" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource DeepPurpleNexusBrush}" />
        <Setter Property="Foreground" Value="{StaticResource VeryLightBrush}" />
        <Setter Property="Padding" Value="25 10" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource Neuropol}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>

                            <TextBlock Text="{TemplateBinding Content}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           FontSize="{TemplateBinding FontSize}" 
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           Margin="{TemplateBinding Padding}" 
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                          
                                 />


                            <TextBlock Style="{StaticResource SpinningText}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           FontSize="20"
                                           Foreground="{StaticResource MilkBrush}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}" 
                                          
                                 />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PurpleNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DeepPurpleNexus}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>